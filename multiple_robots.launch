<?xml version="1.0"?>
<launch>
  <param name="robot_description" command="$(find xacro)/xacro '$(find demonstrator6_description)/urdf/multiple_robots/multiple_robots.urdf.xacro'" />

  <group ns="/iiwa">
    <param name="robot_description" command="$(find xacro)/xacro '$(find demonstrator6_description)/urdf/multiple_robots/multiple_robots.urdf.xacro'" />
    <rosparam file="$(find demonstrator6_description)/config/ros_controllers_eff_traj.yaml" command="load"/>
    <node name="iiwa_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="joint_state_controller effort_trajectory_controller gripper_left_effort_controller gripper_right_effort_controller">
    </node>
    <node name="iiwa_joint_state_relay" pkg="topic_tools" type="relay" args="/iiwa/joint_states /joint_states"/>
  </group>

  <group ns="/panda">
    <param name="robot_description" command="$(find xacro)/xacro '$(find demonstrator6_description)/urdf/multiple_robots/multiple_robots.urdf.xacro'" />
    <rosparam file="$(find demonstrator6_description)/config/ros_controllers_panda.yaml" command="load"/>
    <node name="panda_arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="joint_state_controller position_joint_trajectory_controller franka_gripper">
    </node>
    <node name="joint_state_relay" pkg="topic_tools" type="relay" args="joint_states /joint_states"/>
  </group>

  <group ns="/ur5e">
    <param name="robot_description" command="$(find xacro)/xacro '$(find demonstrator6_description)/urdf/multiple_robots/multiple_robots.urdf.xacro'" />
    <rosparam file="$(find ur_e_gazebo)/controller/arm_controller_ur5e.yaml" command="load"/>
    <rosparam file="$(find ur_e_gazebo)/controller/joint_state_controller.yaml" command="load"/>
    <rosparam file="$(find demonstrator6_description)/config/ros_controllers_ur5e.yaml" command="load"/>
    <node name="ur5e_arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="joint_state_controller arm_controller gripper_left_effort_controller gripper_right_effort_controller">
    </node>
    <node name="ur5e_joint_state_relay" pkg="topic_tools" type="relay" args="joint_states /joint_states"/>
  </group>

  <!--<group ns="/arm">
    <param name="robot_description" command="$(find xacro)/xacro '$(find demonstrator6_description)/urdf/multiple_robots/multiple_robots.urdf.xacro'" />

    <rosparam file="$(find sacc_rec_grasp)/config/arm_controllers.yaml" command="load"/>

    <node name="lwa4p_arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="arm_joint_state_controller arm_eff_traj_controller">
    </node>

    <node name="lwa4p_joint_state_relay" pkg="topic_tools" type="relay" args="joint_states /joint_states"/>
  </group>

  <group ns="/svh">
    <group ns="svh_ros_control_node">
      <param name="robot_description" command="$(find xacro)/xacro '$(find demonstrator6_description)/urdf/multiple_robots/multiple_robots.urdf.xacro'" />
      <rosparam file="$(find sacc_rec_grasp)/config/svh_controllers.yaml" command="load"/>
      <node name="svh_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
            output="screen" args="svh_joint_state_controller
                                  svh_eff_based_traj_controller_hand
                                  "/>
      <node name="svh_joint_state_relay" pkg="topic_tools" type="relay" args="joint_states /joint_states"/>
    </group>
  </group>-->

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
  </node>

 <!-- <node name="manager_module" pkg="iba_multimodule_experiment" type="manager_module.py" respawn="false" output="screen"/>
  <node name="cerebellum" pkg="demonstrator6" type="iba_cerebellum.py" respawn="false" output="screen"/>
  <node name="reactive_component" pkg="demonstrator6" type="iba_reactive_component.py" respawn="false" output="screen"/>-->
</launch>
